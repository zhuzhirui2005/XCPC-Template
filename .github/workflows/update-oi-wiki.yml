name: Update OI-Wiki PDF

on:
  # 每天 UTC 1 点触发一次，也可使用 workflow_dispatch 手动触发
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  update_pdf:
    runs-on: ubuntu-latest

    steps:
      # 1. 签出仓库并保留凭据以便后续 git push
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      # 2. 获取最新 Release 中名为 OI-wiki.pdf 的下载链接
      - name: Get latest release asset URL
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const rel = await github.rest.repos.getLatestRelease({
              owner: 'OI-wiki',
              repo: 'OI-Wiki-export'
            });
            const asset = rel.data.assets.find(a => a.name === 'OI-wiki.pdf');
            if (!asset) throw new Error('Cannot find OI-wiki.pdf in latest release');
            core.setOutput('url', asset.browser_download_url);

      # 3. 下载最新的 OI-wiki.pdf
      - name: Download OI-wiki.pdf
        run: |
          curl -L "${{ steps.get_release.outputs.url }}" -o OI-wiki.pdf

      # 4. 如果有变化，提交并推送到远程
      - name: Commit & Push if changed
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 配置提交作者
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # 暂存新下载的文件
          git add OI-wiki.pdf

          # 检测暂存区与 HEAD 是否有差异（包括新文件）
          if git diff-index --quiet HEAD --; then
            echo "No changes in OI-wiki.pdf, skipping commit."
          else
            git commit -m "chore: update OI-wiki.pdf to latest release"
            git push
          fi
